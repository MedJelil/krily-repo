// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int     @id @default(autoincrement())
  name        String
  phoneNumber String  @unique
  password    String
  roleId      Int?
  role        Role?   @relation(fields: [roleId], references: [id])
  admin       Admin?
  rental      Rental?
  client      Client?
}

model Role {
  id   Int    @id @default(autoincrement())
  name String
  user User[]
}

model Admin {
  id     Int  @id @default(autoincrement())
  userId Int  @unique
  user   User @relation(fields: [userId], references: [id])
}

model Client {
  id           Int           @id @default(autoincrement())
  status       Status        @default(NOT_VERIFIED)
  image_url    String
  permis       String
  identity     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  rentedCars   RentedCar[] // One-to-many relationship
  reservedCars ReservedCar[] // One-to-many relationship
  userId       Int           @unique
  user         User          @relation(fields: [userId], references: [id])
}

model Rental {
  id        Int      @id @default(autoincrement())
  status    Status   @default(NOT_VERIFIED)
  image_url String   @default("")
  location  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id])
  cars      Car[] // One-to-many relationship
}

model Car {
  id             Int           @id @default(autoincrement())
  model          String
  brand          String
  gearBox        String
  fuel           String
  status         Status        @default(NOT_VERIFIED)
  main_image_url String
  image1_url     String
  image2_url     String
  silenders      Int
  color          String
  year           Int
  daily_price    Float
  rentalId       Int
  rental         Rental        @relation(fields: [rentalId], references: [id])
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  rentedCars     RentedCar[]
  reservedCars   ReservedCar[]
}

model RentedCar {
  id        Int      @id @default(autoincrement())
  days      Int
  clientId  Int
  status    Status   @default(IN_PROGRESS)
  carId     Int
  client    Client   @relation(fields: [clientId], references: [id])
  car       Car      @relation(fields: [carId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ReservedCar {
  id                   Int      @id @default(autoincrement())
  rental_date          DateTime
  end_reservation_date DateTime
  days                 Int
  status               Status   @default(IN_PROGRESS)
  clientId             Int
  carId                Int
  client               Client   @relation(fields: [clientId], references: [id])
  car                  Car      @relation(fields: [carId], references: [id])
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

enum Status {
  VERIFIED
  IN_PROGRESS
  NOT_VERIFIED
  BLOCKED
}
